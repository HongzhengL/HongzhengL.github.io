{
    "projects": [
        {
            "title": "Non-Linear Chatbot",
            "description": [
                "Solved the problem of linear, hard-to-follow AI conversations by introducing a visual, non-linear conversation model",
                "Enabled users to easily explore multiple follow-up paths from any response without losing context or getting overwhelmed",
                "Visualized conversation trees using ReactFlow, allowing intuitive navigation and branching discussions directly from the canvas",
                "Implemented flexible API integration supporting multiple AI providers (OpenAI, Anthropic) with dynamic model selection",
                "Provided configurable system prompts and initial messages through JSON files for customizable chat behavior",
                "Persisted conversation state efficiently with localStorage and optimized UI for smooth user interaction"
            ],
            "technologies": ["React", "Javascript", "CSS", "HTML"],
            "links": [
                {
                    "text": "View Demo",
                    "url": "https://chat.hongzhengli.com"
                },
                {
                    "text": "View Source Code",
                    "url": "https://github.com/WASD2HJKL/Non-Linear-Chatbot"
                }
            ],
            "image": "assets/images/chatbot.png"
        },
        {
            "title": "Drone Simulation",
            "description": [
                "Built a multi-entity simulator in C++ using Composite Factory",
                "Extended functionality of entities using the Decorator pattern",
                "Implemented the Observer pattern for real-time notifications, sending JSON events to TypeScript front end",
                "Containerized the environment with Docker for uniform builds and deployments",
                "Employed CI/CD pipelines to automate testing and deployment",
                "Practiced Scrum and used Git for collaborative development and version control"
            ],
            "technologies": [
                "C++",
                "TypeScript",
                "Docker",
                "Docker Compose",
                "CI/CD",
                "Git"
            ],
            "links": [
                {
                    "text": "Read Docs",
                    "url": "https://docs.hongzhengli.com/drone-simulation/classes.html"
                },
                {
                    "text": "Play with it",
                    "url": "https://drone.hongzhengli.com"
                },
                {
                    "text": "View Source Code",
                    "url": "https://git.hongzhengli.com/Drone_Simulation"
                },
                {
                    "text": "Deploy it now!",
                    "url": "https://github.com/HongzhengL/drone-simulation"
                }
            ],
            "image": "assets/images/Drone_Simulation_UI.png"
        },
        {
            "title": "Distributed Address Lookup System",
            "description": [
                "Built a multi-container application with gRPC and Flask for address lookups in Madison, WI",
                "Implemented LRU caching and load-balanced gRPC requests for performance optimization",
                "Used Docker and Docker Compose for consistent, containerized deployment",
                "Added retry logic and server replication to handle failures gracefully"
            ],
            "technologies": [
                "Python",
                "gRPC",
                "Flask",
                "Docker",
                "Docker Compose"
            ],
            "links": [
                {
                    "text": "View Source Code",
                    "url": "https://git.hongzhengli.com/CS544/proj-2/~files"
                }
            ],
            "image": "assets/images/look_up_system.png"
        },
        {
            "title": "xv6 Transparent Huge Page Support",
            "description": [
                "Extended xv6 kernel to support 4MB huge page allocations via custom physical allocator (khugealloc, khugefree)",
                "Developed user-level vmalloc/vfree supporting base or huge pages with robust error handling and input validation",
                "Added transparent huge page support (THP) to malloc() using size-based heuristics (1MB threshold)",
                "Created system calls (setthp, procpgdirinfo, printhugpde) for controlling and debugging THP allocation",
                "Addressed edge cases like invalid remapping and page boundary overflows through iterative debugging",
                "Managed development across multiple branches with CI configuration, merging, and cleanup"
            ],
            "technologies": ["C", "Git", "CI/CD"],
            "links": [
                {
                    "text": "View Source Code",
                    "url": "https://github.com/HongzhengL/xv6-thp"
                }
            ],
            "image": "assets/images/xv6-thp.png"
        },
        {
            "title": "MiniSpark - Distributed Data Processing Framework",
            "description": [
                "Developed a thread-based mini implementation of Apache Spark for parallel data processing on a single node",
                "Built a Directed Acyclic Graph (DAG) model using Resilient Distributed Datasets (RDDs) to organize data processing tasks",
                "Implemented common data transformations such as map, filter, join, and partitionBy with parallel execution across worker threads",
                "Managed concurrent execution using a custom thread pool and synchronized task queue with condition variables",
                "Utilized metrics logging to monitor task scheduling and execution performance in real-time",
                "Optimized parallel computation of RDD partitions and DAG traversal to avoid deadlocks and efficiently utilize CPU cores"
            ],
            "technologies": ["C", "Git", "CI/CD"],
            "links": [
                {
                    "text": "View Project",
                    "url": "https://git.hongzhengli.com/CS537-Intro-OS/25Spring-p5-miniSpark"
                }
            ],
            "image": "assets/images/miniSpark.png"
        }
    ]
}
