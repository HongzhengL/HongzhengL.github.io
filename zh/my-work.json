{
    "projects": [
        {
            "title": "非线性聊天机器人",
            "description": [
                "构建可视化的非线性对话模型，解决传统 AI 对话线性难追踪的问题",
                "让用户能从任意回复延展多个分支，同时保持上下文不丢失",
                "通过 React Flow 绘制对话树，可在画布上直观导航并继续分支讨论",
                "封装可插拔的 API，支持 OpenAI、Anthropic 等模型并可动态切换",
                "以 JSON 配置 system prompt 和初始消息，便于定制对话风格",
                "使用 localStorage 持久化会话状态，并调优界面交互体验"
            ],
            "technologies": ["React", "Javascript", "CSS", "HTML"],
            "links": [
                {
                    "text": "查看演示",
                    "url": "https://nonlinearchatbot.netlify.app"
                },
                {
                    "text": "查看源代码",
                    "url": "https://github.com/WASD2HJKL/Non-Linear-Chatbot"
                }
            ],
            "image": "assets/images/chatbot.png"
        },
        {
            "title": "无人机仿真系统",
            "description": [
                "在 C++ 中以 Composite Factory（组合工厂）模式组织多实体仿真",
                "运用 Decorator（装饰器）模式按需扩展实体能力",
                "实现 Observer（观察者）机制，实时向 TypeScript 前端推送 JSON 事件",
                "通过 Docker 容器统一构建、测试与部署流程",
                "建立 CI/CD 流水线，实现自动化测试与发布",
                "按 Scrum 节奏协作，并以 Git 管理版本"
            ],
            "technologies": [
                "C++",
                "TypeScript",
                "Docker",
                "Docker Compose",
                "CI/CD",
                "Git"
            ],
            "links": [
                {
                    "text": "阅读文档",
                    "url": "https://docs.hongzhengli.com/drone-simulation/classes.html"
                },
                {
                    "text": "试玩",
                    "url": "https://drone.hongzhengli.com"
                },
                {
                    "text": "查看源代码",
                    "url": "https://git.hongzhengli.com/Drone_Simulation"
                },
                {
                    "text": "立即部署",
                    "url": "https://github.com/HongzhengL/drone-simulation"
                }
            ],
            "image": "assets/images/Drone_Simulation_UI.png"
        },
        {
            "title": "分布式地址查询系统",
            "description": [
                "以 gRPC 搭配 Flask 构建多容器服务，提供麦迪逊市地址查询",
                "实现 LRU 缓存与负载均衡 gRPC 请求，提升响应速度",
                "通过 Docker 与 Docker Compose 保持各环境配置一致",
                "加入重试与多副本策略，提升故障恢复能力"
            ],
            "technologies": [
                "Python",
                "gRPC",
                "Flask",
                "Docker",
                "Docker Compose"
            ],
            "links": [
                {
                    "text": "查看源代码",
                    "url": "https://git.hongzhengli.com/CS544/proj-2/~files"
                }
            ],
            "image": "assets/images/look_up_system.png"
        },
        {
            "title": "xv6 Transparent Huge Page（透明大页面）支持",
            "description": [
                "扩展 xv6 内核，自研物理内存分配器（khugealloc/khugefree）以支持 4 MB 大页",
                "实现用户态 vmalloc/vfree，兼容常规页与大页，并强化异常处理与参数校验",
                "为 malloc() 增加透明大页（THP）策略，采用 1 MB 阈值的启发式算法",
                "新增 setthp、procpgdirinfo、printhugpde 等系统调用，便于控制与调试 THP 分配",
                "多轮迭代修复极端场景，例如非法重映射与页边界越界",
                "维护多条开发分支，完成 CI 配置、合并与清理"
            ],
            "technologies": ["C", "Git", "CI/CD"],
            "links": [
                {
                    "text": "查看源代码",
                    "url": "https://github.com/HongzhengL/xv6-thp"
                }
            ],
            "image": "assets/images/xv6-thp.png"
        },
        {
            "title": "MiniSpark - 分布式数据处理框架",
            "description": [
                "编写基于线程的 Mini Spark，实现单机并行数据处理",
                "用 RDD（弹性分布式数据集）构建 DAG（有向无环图）来编排任务",
                "支持 map、filter、join、partitionBy 等常见转换，并在多线程间并行执行",
                "自建线程池与含条件变量的任务队列，稳健调度并发作业",
                "记录运行指标，实时观察任务调度与执行表现",
                "优化 RDD 分区计算与 DAG 遍历，避免死锁并充分利用 CPU 核心"
            ],
            "technologies": ["C", "Git", "CI/CD"],
            "links": [
                {
                    "text": "查看项目",
                    "url": "https://git.hongzhengli.com/CS537-Intro-OS/25Spring-p5-miniSpark"
                }
            ],
            "image": "assets/images/miniSpark.png"
        }
    ]
}
